IF(USELOG4CPLUSV2)
  FIND_PACKAGE(log4cplus-2.0 REQUIRED)
ELSE()
  FIND_PACKAGE(log4cplus REQUIRED)
ENDIF()

MESSAGE( "Log4cplus version: ${LOG4CPLUS_VERSION}" )

SET(LFA_PLUGIN_LOG4CPLUS_MOC_CLASSES
	Log4cplusGUIIntegration.h
	LogEntryParser_log4cplusSocket.h
)

SET(LFA_PLUGIN_LOG4CPLUS_LIB_SOURCES
  EntryToTextFormaterLog4cplus.cpp
  Log4cplusGUIIntegration.cpp
  LogEntryParser_log4cplusSocket.cpp
)

QT5_WRAP_CPP(LFA_PLUGIN_LOG4CPLUS_MOC_SOURCES ${LFA_PLUGIN_LOG4CPLUS_MOC_CLASSES})

ADD_LIBRARY(${LFA_PLUGIN_LOG4CPLUS_LIB} SHARED ${LFA_PLUGIN_LOG4CPLUS_LIB_SOURCES} ${LFA_PLUGIN_LOG4CPLUS_MOC_SOURCES})

TARGET_LINK_LIBRARIES( ${LFA_PLUGIN_LOG4CPLUS_LIB}
  ${LFA_PLUGINS_BASIC_LIB}
  ${LOG4CPLUS_LIBRARIES}
  Qt5::Network
)

TARGET_COMPILE_DEFINITIONS(${LFA_PLUGIN_LOG4CPLUS_LIB} PRIVATE -DQT_PLUGIN)
TARGET_COMPILE_DEFINITIONS(${LFA_PLUGIN_LOG4CPLUS_LIB} PRIVATE -DQT_SHARED)

install (TARGETS ${LFA_PLUGIN_LOG4CPLUS_LIB}
         LIBRARY DESTINATION "${LW_PLUGIN_DIR}" )

IF(NOT UNIX)
  INSTALL( FILES ${LOG4CPLUS_DLL}
    DESTINATION "${LW_BINARY_DIR}" )
ENDIF()
