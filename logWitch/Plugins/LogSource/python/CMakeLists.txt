FIND_PACKAGE(Python3 REQUIRED COMPONENTS Development)
SET(PYTHON_VERSION_TAG "${Python3_VERSION_MAJOR}${Python3_VERSION_MINOR}")

FIND_PACKAGE(Boost COMPONENTS "python${PYTHON_VERSION_TAG}")
IF(NOT Boost_FOUND)
  FIND_PACKAGE(Boost REQUIRED COMPONENTS "python-py${PYTHON_VERSION_TAG}")
ENDIF()

message(STATUS "Python3_LIBRARIES = ${Python3_LIBRARIES}")
message(STATUS "Python3_INCLUDE_DIRS = ${Python3_INCLUDE_DIRS}")
message(STATUS "Boost_LIBRARIES = ${Boost_LIBRARIES}")

SET(LFA_PLUGIN_PYTHON_LIB_SOURCES
  PythonGUIIntegration.cpp
  LogEntryParser_pythonSocket.cpp
)

ADD_LIBRARY(${LFA_PLUGIN_PYTHON_LIB} MODULE ${LFA_PLUGIN_PYTHON_LIB_SOURCES})

TARGET_INCLUDE_DIRECTORIES(${LFA_PLUGIN_PYTHON_LIB} PUBLIC ${Boost_INCLUDE_DIRS})


TARGET_LINK_LIBRARIES( ${LFA_PLUGIN_PYTHON_LIB}
  ${LFA_PLUGINS_BASIC_LIB}
  ${Boost_LIBRARIES}
  Python3::Python
  Qt${QT_VERSION_MAJOR}::Network
)

TARGET_COMPILE_DEFINITIONS(${LFA_PLUGIN_PYTHON_LIB} PRIVATE -DQT_PLUGIN)
TARGET_COMPILE_DEFINITIONS(${LFA_PLUGIN_PYTHON_LIB} PRIVATE -DQT_SHARED)
TARGET_COMPILE_DEFINITIONS(${LFA_PLUGIN_PYTHON_LIB} PRIVATE -DQT_NO_KEYWORDS)

install (TARGETS ${LFA_PLUGIN_PYTHON_LIB}
         LIBRARY DESTINATION "${LW_PLUGIN_DIR}" )

if(NOT UNIX)
  find_file(PYTHON_DLL
    libpython${Python3_VERSION_MAJOR}.${Python3_VERSION_MINOR}.dll
    PATHS ${Python3_RUNTIME_LIBRARY_DIRS}
  )
  find_file(BOOSTPYTHON_DLL
    libboost_python${PYTHON_VERSION_TAG}-mt.dll
    PATHS ${Python3_RUNTIME_LIBRARY_DIRS}
  )
  install(FILES ${PYTHON_DLL} ${BOOSTPYTHON_DLL} DESTINATION "${LW_BINARY_DIR}")
endif()
